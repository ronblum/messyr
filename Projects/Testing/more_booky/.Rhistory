library(blogdown)
library(bookdown)
render_book()
render_book(input = ".")
serve_book(dir = ".", output_dir = "_book", preview = TRUE,
in_session = TRUE, quiet = FALSE, ...)
serve_book(dir = ".", output_dir = "_book", preview = TRUE,
in_session = TRUE, quiet = FALSE)
serve_book(dir = ".", output_dir = "_book", preview = TRUE,
in_session = TRUE, quiet = FALSE
)
library(bookdown)
serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
library(bookdown)
serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
library(bookdown)
serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
library(bookdown)
serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
serve_book(dir = ".", output_dir = "_book", preview = TRUE)
library(bookdown); serve_book(dir = ".", output_dir = "_book", preview = TRUE)
library(bookdown); serve_book(dir = ".", output_dir = "_book", preview = TRUE)
install.packages('blogdown')
install.packages("blogdown")
blogdown::install_hugo()
serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
bookdown::serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
bookdown::serve_book(dir = ".", output_dir = "_book", preview = TRUE, in_session = TRUE, quiet = FALSE)
remotes::install_github("rstudio/reticulate")
reticulate::install_python(version = "3.7.7")
reticulate::install_python(version = "3.7.7")
reticulate::install_python(version = "3.7.7")
reticulate::install_python(version = "3.7.7")
?devtools
??devtools
?pyenv
??pyenv
?install_python
install_python(list = TRUE)
reticulate::install_python(list = TRUE)
reticulate::install_python(version = "3.7.7")
reticulate::install_python(version = "3.7.9")
install_python(list = TRUE)
reticulate::install_python(list = TRUE)
revdep
?revdep
??revdep
devtools::revdep()
revdepcheck::revdep_check()
pwd
getwd()
library(reticulate)
install_python()
?install_python
virtualenv_create("my-environment", python_version = version)
reticulate::conda_list()
reticulate::conda_list()
reticulate::conda_list()
reticulate::conda_list()
reticulate::conda_list()
reticulate::conda_list()
virtualenv_list()
reticulate::virtualenv_list()
getwd()
library(DBI)
con <- dbConnect(odbc::odbc(), "SQL Server (DSN)", timeout = 10)
library(DBI)
con <- dbConnect(odbc::odbc(), "PostgreSQL (DSN)", timeout = 10)
library(DBI)
con <- dbConnect(odbc::odbc(), "PostgreSQL (DSN)", timeout = 10)
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
getwd()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_site()
blogdown::serve_stop()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
config
config()
rmarkdown::site_config()
library(bigmemory)
install.packages("bigmemory")
library(bigmemory)
setClass("testClass1",
slots = c(md5 = "character"),
contains = "big.matrix")
setClass("testClass2",
slots = c(md5 = "character"),
prototype = c(md5 = "1"),
contains = "big.matrix")
t1 <- as.big.matrix(matrix(1:100, nrow = 10))
t2 <- new("testClass1", address = t1@address, md5 = digest::digest(matrix(1:100, nrow = 10)))
t3 <- new("testClass2", address = t1@address, md5 = digest::digest(matrix(1:100, nrow = 10)))
